fun main() {    println("hello world")    println(sum(2, 3))    printSum(2, 4)    vars(1, 2, 4, 5, 6)    val sumLam:(Int, Int) -> Int = {x, y -> x + y}    println(sumLam(1, 2))    var a : Int = 1    val b = 2    val c: Int    c = 3    vars(a, b, c)    // 这是一个单行注释    /* 这是一个多行的        块注释。 */    val s1 = "a is $a"    a = 3    val s2 = "${s1.replace("is", "was")}, but noe is $a"    printf(s1)    printf(s2)    //类型后面加?表示可为空    var age: String? = "23"    //抛出空指针异常    val ages = age!!.toInt()    //不做处理返回 null    val ages1 = age?.toInt()    //age为空返回-1    val ages2 = age?.toInt() ?: -1    for (i in 1..4) print(i) // 输出“1234”    print("\n循环输出：")    for (i in 1..4) print(i) // 输出“1234”    println("\n----------------")    print("设置步长：")    for (i in 1..4 step 2) print(i) // 输出“13”    println("\n----------------")    print("使用 downTo：")    for (i in 4 downTo 1 step 2) print(i) // 输出“42”    println("\n----------------")    print("使用 until：")    // 使用 until 函数排除结束元素    for (i in 1 until 4) {   // i in [1, 4) 排除了 4        print(i)    }    println("\n----------------")}fun sum(a: Int, b:Int): Int {    return a + b}public fun printSum(a:Int, b:Int) {    println(a + b)}fun vars(vararg v: Int) {    for (vt in v) {        print(vt)    }    println()}fun printf(vararg v: Any) {    for (vt in v) {        print(vt)    }    println()}