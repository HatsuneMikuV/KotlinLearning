fun main() {    println("hello world")    println(sum(2, 3))    printSum(2, 4)    vars(1, 2, 4, 5, 6)    val sumLam:(Int, Int) -> Int = {x, y -> x + y}    println(sumLam(1, 2))    var a : Int = 1    val b = 2    val c: Int    c = 3    vars(a, b, c)    // 这是一个单行注释    /* 这是一个多行的        块注释。 */    val s1 = "a is $a"    a = 3    val s2 = "${s1.replace("is", "was")}, but noe is $a"    printf(s1)    printf(s2)    //类型后面加?表示可为空    var age: String? = "23"    //抛出空指针异常    val ages = age!!.toInt()    //不做处理返回 null    val ages1 = age?.toInt()    //age为空返回-1    val ages2 = age?.toInt() ?: -1    for (i in 1..4) print(i) // 输出“1234”    print("\n循环输出：")    for (i in 1..4) print(i) // 输出“1234”    println("\n----------------")    print("设置步长：")    for (i in 1..4 step 2) print(i) // 输出“13”    println("\n----------------")    print("使用 downTo：")    for (i in 4 downTo 1 step 2) print(i) // 输出“42”    println("\n----------------")    print("使用 until：")    // 使用 until 函数排除结束元素    for (i in 1 until 4) {   // i in [1, 4) 排除了 4        print(i)    }    println("\n----------------")    BaseDataType()}fun sum(a: Int, b:Int): Int {    return a + b}public fun printSum(a:Int, b:Int) {    println(a + b)}fun vars(vararg v: Int) {    for (vt in v) {        print(vt)    }    println()}fun printf(vararg v: Any) {    for (vt in v) {        print(vt)    }    println()}fun BaseDataType() {    /*    Kotlin 的基本数值类型包括 Byte、Short、Int、Long、Float、Double 等。不同于 Java 的是，字符不属于数值类型，是一个独立的数据类型。    类型	    位宽度    Double	64    Float	32    Long	64    Int	    32    Short	16    Byte	8    * */    val a: Int = 10000    printf(a === a) // true，值相等，对象地址相等    //经过了装箱，创建了两个不同的对象    val boxedA: Int? = a    val anotherBoxedA: Int? = a    //虽然经过了装箱，但是值是相等的，都是10000    printf(boxedA === anotherBoxedA) //===  false，值相等，对象地址不一样    printf(boxedA == anotherBoxedA) //== true，值相等    //[1,2,3]    val arr = arrayOf(1, 2, 3)    //[0,2,4]    val b = Array(3, { i -> (i * 2) })    //读取数组内容    println(arr[0])    // 输出结果：1    println(b[1])    // 输出结果：2    val text = """    多行字符串    多行字符串    """    println(text)   // 输出有一些前置空格    val text1 = """    |多行字符串    |菜鸟教程    |多行字符串    |Runoob    """.trimMargin()    println(text1)    // 前置空格删除了    val i = 10    val s = "i = $i" // 求值结果为 "i = 10"    println(s)    val s1 = "runoob"    val str = "$s1.length is ${s1.length}" // 求值结果为 "runoob.length is 6"    println(str)    val price = """    ${'$'}9.99    """    println(price)  // 求值结果为 $9.99}fun change() {    var x = 0    if(x>0){        println("x 大于 0")    }else if(x==0){        println("x 等于 0")    }else{        println("x 小于 0")    }    var a = 1    var b = 2    val c = if (a>=b) a else b    println("c 的值为 $c")}